====== TP-Link TL-WA7210N ======
TP-Link TL-WA7210N

===== Supported Versions =====
^ Version/Model ^ Launch Date ^ S/N ^ OpenWrt Version Supported ^ Model Specific Notes ^

| v2.1 |  2014-??  | 2141002T00247 |  WIP  | 2.4 GHz outdoor AP |


OEM source code available at: [[http://www.tp-link.com.de/resources/gpl/150Router.tar]]

===== Hardware Highlights =====
^ SoC ^ Ram ^ Flash ^ Network ^ USB ^ Serial ^ JTag ^
| QCA AR9331 | 32MiB | 4MiB | 1x 10/100 RJ45 (passive PoE) | Yes | Yes | ? |

Manufacturer's site: [[http://www.tp-link.com/en/products/details/?categoryid=1246&model=TL-WA7210N]]

Forum: [[https://forum.openwrt.org/viewtopic.php?id=46779]]

==== FIXME ====
This device is very similar to its 5 GHz sibling, [[/toh/tp-link/tl-wa7510n]]

| [[doc/howto/generic.overview]] if you have no time to write certain stuff link to this |
| [[doc/howto/basic.config]] should lead the way, do not explain this again  |
| DO NOT provide a complete howto here! Instead //groom// the general HowTos.  |


===== Installation =====
  - → [[doc:howto:obtain.firmware]]
  - → [[doc:howto:generic.flashing|Install OpenWrt]]
  - → **»»»»here»»»»[[about/latest|Latest OpenWrt release]]««««here««««**

==== Flash Layout ====

FIXME
Please check out the article [[doc:techref:Flash Layout]]. It contains an example and a couple of explanations.

==== OEM easy installation ====

| FIXME The instructions below are for Broadcom devices and only serve as an example. Don't leave them in place if they do not apply to a particular device! |

This section deals with how you install OpenWrt from a device freshly opened.  Plus the steps required such as reset to factory defaults if the device has already been configured

**Note:** Reset router to factory defaults if it has been previously configured.
  *Browse to http://192.168.1.1/Upgrade.asp
  *Upload .bin file to router
  *Wait for it to reboot
  *Telnet to 192.168.1.1 and set a root password, or browse to http://192.168.1.1 if LuCI is installed.

==== OEM installation using the TFTP method ====
FIXME
->  [[doc:howto:generic.flashing.tftp]]

=== Specific values you need ===

| Bootloader tftp server IPv4 address | FILL-IN |
| Bootloader MAC address (special) | FILL-IN |
| Firmware tftp image | [[about/latest|Latest OpenWrt release]] (**''NOTE:''** Name must contain //"tftp"//) |
| TFTP Transfer Window | FILL-IN seconds |
| TFTP Window Start | approximately FILL-IN seconds after power on |
| TFTP Client Required IP Address | FILL-IN |

==== Upgrading OpenWrt ====
->  [[doc:howto:generic.sysupgrade]]

If you have already installed OpenWrt and like to reflash for e.g. upgrading to a new OpenWrt version you can upgrade using the mtd command line tool. It is important that you put the firmware image into the ramdisk (/tmp) before you start flashing.

=== LuCI Web Upgrade Process ===

  * Browse to http://192.168.1.1/cgi-bin/luci/mini/system/upgrade/ LuCI Upgrade URL
  * Upload image file for sysupgrade to LuCI
  * Wait for reboot

=== Terminal Upgrade Process ===

  * Login as root via SSH on 192.168.1.1
  * Use the following commands to upgrade.

<code>
cd /tmp/
wget http://http://downloads.openwrt.org/snapshots/trunk/XXX/xxx.abc
sysupgrade /tmp/xxx.abc
</code>

  *If sysupgrade does not support this router, use the following commands.

<code>
cd /tmp/
wget http://http://downloads.openwrt.org/snapshots/trunk/XXX/xxx.abc
mtd write /tmp/xxx.abc linux && reboot</code>


===== Basic configuration =====
-> [[doc:howto:basic.config|Basic configuration]] After flashing, proceed with this.\\
Set up your Internet connection, configure wireless, configure USB port, etc.


===== Specific Configuration =====
==== Interfaces ====

The default network configuration is:
^ Interface Name ^ Description ^ Default configuration ^
| br-lan | LAN & WiFi | 192.168.1.111/24 | 
| vlan0 (eth0.0) | LAN ports (1 to 4) | None | 
| vlan1 (eth0.1) | WAN port | DHCP | 
| wl0 | WiFi | Disabled | 

==== Switch Ports (for VLANs) ====
Numbers 0-3 are Ports 1-4 as labeled on the unit, number 4 is the Internet (WAN) on the unit, 5 is the internal connection to the router itself. Don't be fooled: Port 1 on the unit is number 3 when configuring VLANs. vlan0 = eth0.0, vlan1 = eth0.1 and so on.
^ Port ^ Switch port ^
| Internet (WAN) | 4 | 
| LAN 1 | 3 | 
| LAN 2 | 2 | 
| LAN 3 | 1 | 
| LAN 4 | 0 | 

==== Failsafe mode ====
-> [[doc:howto:generic.failsafe]]

==== Buttons ====
-> [[doc:howto:hardware.button]] on howto use and configure the hardware button(s).

The TP-Link TL-WA7210N has one reset button. 
^ BUTTON ^ Event ^
| Reset | reset | 


===== Hardware =====
==== Info ====
| **[[wp>Instruction set]]:**               | [[wp>MIPS architecture|MIPS]] |
| **Vendor:**                               | [[wp>Qualcomm Atheros]] |
| **[[doc:techref:Bootloader]]:**           | [[doc:techref:bootloader:uboot|crippled U-Boot]]  |
| **[[doc:hardware:soc|System-On-Chip]]:**  | QCA9230 |
| **[[doc:hardware:cpu|CPU]] @Frq**         | MIPS 24Kc V7.4 @400MHz / MIPS 34Kc V x.y @540MHz / MIPS 74Kc Vers. ?.? @720MHz |
| **Flash size:**                 | 4096 KiB |
| **Flash Chip:**                 | ? |
| **RAM size:**                   | 32 MiB   |
| **RAM Chip:**                   |  Zentel A3S56D30FTP |
| **Wireless No1:**               | //SoC-integrated//: QCA9380 w/ 2x2 MIMO for 2.4GHz 802.11b/g/n   |
| **[[doc:hardware:Switch]]:**    | ?  |
| **[[doc/hardware/internet.access.technologies|Modem]]:**   | none |
| **USB:**                        | none  |
| **[[doc:hardware:port.serial|Serial]]:**  | [[#Serial|Yes]] |
| **[[doc:hardware:port.jtag|JTAG]]:**      | [[#JTAG|?]]   |

==== Photos ====
TL-WA7210N v2.1

//Front://

**Photo of front of the casing**

//Back://

**Photo of back of the casing**

==== Opening the case ====
**Note:** This will void your warranty!

  *To remove the cover do a/b/c

//Main PCB//

**Photo of PCB**

==== Serial ====
-> [[doc:hardware:port.serial]] general information about the serial port, serial port cable, etc.

How to connect to the Serial Port of this specific device:

**Photo of PCB with markings**

==== JTAG ====
-> [[doc:hardware:port.jtag]] general information about the JTAG port, JTAG cable, etc.

How to connect to the JTAG Port of this specific device:

**Photo of PCB with markings**


===== Debricking =====
-> [[doc:howto:generic.debrick]]

===== Bootloader Mods =====
  - you could read about [[doc:techref:bootloader]] in general

===== Hardware mods =====
  - as a beginner, you really should inform yourself about [[doc:hardware:soldering]] in general and then obtain some practical experience!

==== 128MiB RAM Mod ====
==== I²C GPIO Mod ====
==== I²C Tiny-USB Mod ====

===== Bootlogs =====

==== OEM bootlog ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>

U-Boot 1.1.4 (Mar 20 2013 - 09:20:08)

AP121 (ar9330) U-boot

DRAM:  32 MB
led turning on for 1s...
id read 0x100000ff
flash size 4194304, sector count = 64
Flash:  4 MB
Using default environment

In:    serial
Out:   serial
Err:   serial
Net:   ag7240_enet_initialize...
No valid address in Flash. Using fixed address
No valid address in Flash. Using fixed address
: cfg1 0x5 cfg2 0x7114
eth0: 00:03:7f:09:0b:ad
ag7240_phy_setup 
eth0 up
: cfg1 0xf cfg2 0x7214
eth1: 00:03:7f:09:0b:ad
athrs26_reg_init_lan
ATHRS26: resetting s26
ATHRS26: s26 reset done
ag7240_phy_setup 
eth1 up
eth0, eth1
Autobooting in 1 seconds
## Booting image at 9f020000 ...
   Uncompressing Kernel Image ... OK

Starting kernel ...

Booting AR9330(Hornet)...
Linux version 2.6.31--LSDK-9.2.0.312 (root@localhost.localdomain) (gcc version 4.3.3 (GCC) ) #1 Wed Mar 20 09:24:16 CST 2013
flash_size passed from bootloader = 4
CPU revision is: 00019374 (MIPS 24Kc)
Determined physical RAM map:
 memory: 02000000 @ 00000000 (usable)
User-defined physical RAM map:
 memory: 02000000 @ 00000000 (usable)
Zone PFN ranges:
  Normal   0x00000000 -> 0x00002000
Movable zone start PFN for each node
early_node_map[1] active PFN ranges
    0: 0x00000000 -> 0x00002000
Built 1 zonelists in Zone order, mobility grouping on.  Total pages: 8128
Kernel command line: console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:128k(u-boot),1024k(kernel),2816(rootfs),64k(config),64k(ART) mem=32M
PID hash table entries: 128 (order: 7, 512 bytes)
Dentry cache hash table entries: 4096 (order: 2, 16384 bytes)
Inode-cache hash table entries: 2048 (order: 1, 8192 bytes)
Primary instruction cache 64kB, VIPT, 4-way, linesize 32 bytes.
Primary data cache 32kB, 4-way, VIPT, cache aliases, linesize 32 bytes
Writing ErrCtl register=00000000
Readback ErrCtl register=00000000
Memory: 29876k/32768k available (1883k kernel code, 2892k reserved, 521k data, 116k init, 0k highmem)
Hierarchical RCU implementation.
NR_IRQS:128
plat_time_init: plat time init done
Calibrating delay loop... 266.24 BogoMIPS (lpj=532480)
Mount-cache hash table entries: 512
NET: Registered protocol family 16
===== ar7240_platform_init: 0
bio: create slab <bio-0> at 0
SCSI subsystem initialized
usbcore: registered new interface driver usbfs
usbcore: registered new interface driver hub
usbcore: registered new device driver usb
NET: Registered protocol family 2
IP route cache hash table entries: 1024 (order: 0, 4096 bytes)
TCP established hash table entries: 1024 (order: 1, 8192 bytes)
TCP bind hash table entries: 1024 (order: 0, 4096 bytes)
TCP: Hash tables configured (established 1024 bind 1024)
TCP reno registered
NET: Registered protocol family 1
AR7240 GPIOC major 0
squashfs: version 4.0 (2009/01/31) Phillip Lougher
NTFS driver 2.1.29 [Flags: R/O].
msgmni has been set to 58
alg: No test for lzma (lzma-generic)
alg: No test for stdrng (krng)
io scheduler noop registered
io scheduler anticipatory registered
io scheduler deadline registered
io scheduler cfq registered (default)
Serial: 8250/16550 driver, 1 ports, IRQ sharing disabled
ttyS0: detected caps 00000000 should be 00000100
serial8250.0: ttyS0 at MMIO 0xb8020000 (irq = 19) is a 16550A
console [ttyS0] enabled
PPP generic driver version 2.4.2
NET: Registered protocol family 24
cmdlinepart partition parsing not available
set partition boot 
set partition kernel 
set partition rootfs 
set partition config 
set partition art 
set partition � 
Searching for RedBoot partition table
5 RedBoot partitions found on MTD device ar7240-nor0
Creating 5 MTD partitions on "ar7240-nor0":
0x000000000000-0x000000020000 : "boot"
0x000000020000-0x000000120000 : "kernel"
0x000000120000-0x0000003e0000 : "rootfs"
0x0000003e0000-0x0000003f0000 : "config"
0x0000003f0000-0x000000400000 : "art"
->Oops: flash id 0x10215 . 
ehci_hcd: USB 2.0 'Enhanced' Host Controller (EHCI) Driver
Port Status 1c000004 
ar7240-ehci ar7240-ehci.0: ATH EHCI
ar7240-ehci ar7240-ehci.0: new USB bus registered, assigned bus number 1
ehci_reset Intialize USB CONTROLLER in host mode: 3
ehci_reset Port Status 1c000000 
ar7240-ehci ar7240-ehci.0: irq 3, io mem 0x1b000000
ehci_reset Intialize USB CONTROLLER in host mode: 3
ehci_reset Port Status 1c000000 
ar7240-ehci ar7240-ehci.0: USB 2.0 started, EHCI 1.00
usb usb1: configuration #1 chosen from 1 choice
hub 1-0:1.0: USB hub found
hub 1-0:1.0: 1 port detected
TCP cubic registered
NET: Registered protocol family 17
802.1Q VLAN Support v1.8 Ben Greear <greearb@candelatech.com>
All bugs added by David S. Miller <davem@redhat.com>
ar7240wdt_init: Registering WDT success
VFS: Mounted root (squashfs filesystem) readonly on device 31:2.
Freeing unused kernel memory: 116k freed
usb 1-1: new full speed USB device using ar7240-ehci and address 2
usb 1-1: device descriptor read/64, error -71
usb 1-1: device descriptor read/64, error -71
usb 1-1: new full speed USB device using ar7240-ehci and address 3
usb 1-1: device descriptor read/64, error -71
init started:  BusyBox v1.01 (2013.03.20-01:28+0000) multi-call binary
usb 1-1: device descriptor read/64, error -71
This Board use 2.6.31
usb 1-1: new full speed USB device using ar7240-ehci and address 4
xt_time: kernel timezone is -0000
nf_conntrack version 0.5.0 (512 buckets, 5120 max)
usb 1-1: device not accepting address 4, error -71
usb 1-1: new full speed USB device using ar7240-ehci and address 5
usb 1-1: device not accepting address 5, error -71
hub 1-0:1.0: unable to enumerate USB device on port 1
ip_tables: (C) 2000-2006 Netfilter Core Team
insmod: cannot open module `/lib/modules/2.6.31/kernel/iptable_raw.ko': No such file or directory
insmod: cannot open module `/lib/modules/2.6.31/kernel/flashid.ko': No such file or directory
PPPoL2TP kernel driver, V1.0
PPTP driver version 0.8.3
insmod: cannot open module `/lib/modules/2.6.31/kernel/harmony.ko': No such file or directory

Now flash open!
 (none) mips #1 Wed Mar 20 09:24:16 CST 2013 (none)
(none) login: Now flash open!
ATHR_GMAC: Length per segment 1536
ATHR_GMAC: fifo cfg 3 01f00140
2
ATHR_GMAC: Max segments per packet :   1
ATHR_GMAC: Max tx descriptor count :   164
ATHR_GMAC: Max rx descriptor count :   196
ATHR_GMAC: Mac capability flags    :   10004D83
1
ATHR_GMAC: Max segments per packet :   1
ATHR_GMAC: Max tx descriptor count :   96
ATHR_GMAC: Max rx descriptor count :   252
ATHR_GMAC: Mac capability flags    :   4403
athr_gmac_ring_alloc Allocated 1536 at 0x81c93000
athr_gmac_ring_alloc Allocated 4032 at 0x81d63000
Setting Drop CRC Errors, Pause Frames and Length Error frames 
Setting PHY...mac 0
athr_gmac_ring_alloc Allocated 2624 at 0x81e76000
athr_gmac_ring_alloc Allocated 3136 at 0x81f1c000
athr_gmac_mii_setup: MDC check failed
Setting Drop CRC Errors, Pause Frames and Length Error frames 
ATHRS26: resetting s26
ATHRS26: s26 reset done
Setting PHY...mac 1
ATH_MAC_TIMER: Current RxFsm for GMAC unit:1 is 0x0 >> 11 is 0x0
device eth0 entered promiscuous mode
Now flash open!
asf: module license 'Proprietary' taints kernel.
Disabling lock debugging due to kernel taint
ath_hal: 0.9.17.1 (AR9380, DEBUG, REGOPS_FUNC, WRITE_EEPROM, 11D)
ath_rate_atheros: Copyright (c) 2001-2005 Atheros Communications, Inc, All Rights Reserved
ath_dev: Copyright (c) 2001-2007 Atheros Communications, Inc, All Rights Reserved
ath_ahb: 9.2.0_U10.1020 (Atheros/multi-bss)
__ath_attach: Set global_scn[0]
ACBKMinfree = 48
ACBEMinfree = 32
ACVIMinfree = 16
ACVOMinfree = 0
CABMinfree = 48
UAPSDMinfree = 0
Bootstrap clock 25MHz
ar9300RadioAttach: Need analog access recipe!!
Restoring Cal data from Flash
ath_get_caps[5169] rx chainmask mismatch actual 1 sc_chainmak 0
ath_get_caps[5144] tx chainmask mismatch actual 1 sc_chainmak 0
wifi0: Atheros 9380: mem=0xb8100000, irq=2
wlan_vap_create : enter. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1
wlan_vap_create : exit. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1.
VAP device ath0 created 
 
 DES SSID SET=TP-LINK_D7B5FC 
ieee80211_scan_unregister_event_handler: Failed to unregister evhandler=c0812180 arg=81f992c0
wlan_vap_delete : enter. vaphandle=0x81fb4000
wlan_vap_delete : exit. vaphandle=0x81fb4000
wlan_vap_create : enter. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1
wlan_vap_create : exit. devhandle=0x80d202c0, opmode=IEEE80211_M_HOSTAP, flags=0x1.
VAP device ath0 created 
 
 DES SSID SET=TP-LINK_D7B5FC 
 ieee80211_ioctl_siwmode: imr.ifm_active=393856, new mode=3, valid=1 
WARNING: Fragmentation with HT mode NOT ALLOWED!!
device ath0 entered promiscuous mode
br0: port 2(ath0) entering forwarding state
 ieee80211_ioctl_siwmode: imr.ifm_active=1442432, new mode=3, valid=1 
br0: port 2(ath0) entering disabled state
 
 DES SSID SET=TP-LINK_D7B5FC 
br0: port 2(ath0) entering forwarding state

</code>
</p>
</HTML>

==== U-Boot printenv ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>
hornet> printenv
bootargs=console=ttyS0,115200 root=31:02 rootfstype=squashfs init=/sbin/init mtdparts=ar7240-nor0:256k(u-boot),64k(u-boot-env),2752k(rootfs),896k(uIma)
bootcmd=bootm 0x9f020000
bootdelay=1
baudrate=115200
ethaddr=0xba:0xbe:0xfa:0xce:0x07:0x41
ipaddr=192.168.1.111
serverip=192.168.1.100
stdin=serial
stdout=serial
stderr=serial
ethact=eth0
</code>

==== OpenWrt bootlog ====
<HTML>
<p style="padding: 10px;border:1px solid grey;height:600px;font:10px/14px Georgia, Garamond, Serif;overflow:Auto;background-color:#FFFFFF">
<code>

PUT HERE YOUR BOOTLOG

</code>
</p>
</HTML>


===== Notes =====


===== Tags =====
For some Help with the Tags, please have a look here: [[meta/tags]]

{{tag>FastEthernet 1NIC 1WNIC ath9k 32RAM 4Flash MIPS32}}
